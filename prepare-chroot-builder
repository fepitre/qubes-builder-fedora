#!/bin/sh
# vim: set ts=4 sw=4 sts=4 et :

set -e
if [ "${VERBOSE:-0}" -ge 2 -o "${DEBUG:-0}" -eq "1" ]; then
    set -x
else
    YUM_OPTS="$YUM_OPTS -q"
fi

PLUGIN_DIR="`dirname $0`"

DIR=$1
DIST=$2
CHROOT_CACHE_FILE=

if { grep -q fc <<< "$DIST"; }; then
    YUM=dnf
    DIST_NAME="fedora"
    DIST_VER="${DIST#fc}"
fi

if { grep -q centos <<< "$DIST"; }; then
    YUM=yum
    DIST_NAME="centos"
    DIST_VER="${DIST#centos}"
fi

if [ -n "$3" ]; then
    PKGLISTFILE="$3"
else
    PKGLISTFILE="${PLUGIN_DIR}/build-pkgs-base-${DIST_NAME}.list"
    if [ "0$CACHE_CHROOT" -eq 1 ]; then
        CHROOT_CACHE_FILE="${CACHEDIR}/chroot-${DIST}-base.tar"
    fi
fi

if [ -f /etc/debian_version ]; then
    # On Debian system-release version isn't properly detected (because of
    # relocated rpmdb)
    YUM_OPTS="$YUM_OPTS --releasever=${DIST_VER}"
fi

INITIAL=

if ! [ -d $DIR/home/user ] && [ -r "$CHROOT_CACHE_FILE" ]; then
    mkdir -p $DIR
    tar xf "$CHROOT_CACHE_FILE" $DIR
elif ! [ -e $DIR/home/user/.prepared_base ]; then
    INITIAL=1
    mkdir -p $DIR

    ${PLUGIN_DIR}/prepare-chroot-base "$DIR" "$DIST"

    if ! [ -r $DIR/proc/cpuinfo ]; then
        mount -t proc proc $DIR/proc
    fi
    cp /etc/resolv.conf $DIR/etc/

    # Always install at least base pkgs
    cp  ${PLUGIN_DIR}/yum.conf $DIR/tmp/
    chroot $DIR $YUM install -c /tmp/yum.conf -y $YUM_OPTS $(cat ${PLUGIN_DIR}/build-pkgs-base-${DIST_NAME}.list)

    # setup user and group
    if [ -z "$USER_UID" -a -n "$SUDO_UID" ]; then
        USER_UID="$SUDO_UID"
    elif [ -z "$USER_UID" ]; then
        USER_UID=1000
    fi
    if [ -z "$USER_GID" -a -n "$SUDO_GID" ]; then
        USER_GID="$SUDO_GID"
    elif [ -z "$USER_GID" ]; then
        USER_GID=1000
    fi
    existing_gid=$(chroot $DIR id -g user 2>/dev/null || :)
    if [ -z "$existing_gid" ]; then
        chroot $DIR groupadd -g $USER_GID user
    elif [ "$existing_gid" != "$USER_GID" ]; then
        chroot $DIR groupmod -g "$USER_GID" user
    fi
    existing_uid=$(chroot $DIR id -u user 2>/dev/null || :)
    if [ -z "$existing_uid" ]; then
        chroot $DIR useradd -g user -u $USER_UID user
    elif [ "$existing_uid" != "$USER_UID" ]; then
        chroot $DIR usermod -u "$USER_UID" user
    fi

    # fc20 setup doesn't include uucp group, which would cause MAKEDEV failure
    chroot $DIR groupadd -rf uucp
    if [ "${DIST_NAME}" == "fedora" ]; then
        chroot $DIR sh -c "cd dev; /sbin/MAKEDEV generic loop;chown -R user /home/user;su -c 'mkdir -p qubes-src' - user"
    fi
    if [ "${DIST_NAME}" == "centos" ]; then
        chroot $DIR sh -c "useradd -g user $USER_OPTS -m user;chown -R user /home/user;su -c 'mkdir qubes-src' - user"
    fi
    # Just to be sure that RPMDB has right format (eg when building host is newer than FC13)
    chroot $DIR rpm --rebuilddb 2> /dev/null
else
    # update chroot
    chroot $DIR groupadd -rf uucp 2>/dev/null || :
    if [ "${DIST_NAME}" == "fedora" ]; then
        chroot $DIR sh -c "cd dev; /sbin/MAKEDEV generic loop"
    fi
fi

${PLUGIN_DIR}/update-local-repo.sh $DIST
cp ${PLUGIN_DIR}/repos/builder-local.repo $DIR/etc/yum.repos.d/
sed -i -e "s#ROOT#$PWD#" $DIR/etc/yum.repos.d/*-local.repo

if [ -n "$USE_QUBES_REPO_VERSION" ]; then
    cp ${PLUGIN_DIR}/repos/qubes-repo-vm.repo $DIR/etc/yum.repos.d/
    if [ "$DIST" = "$DIST_DOM0" ]; then
        cp ${PLUGIN_DIR}/repos/qubes-repo-dom0.repo $DIR/etc/yum.repos.d/
    fi
    sed -i -e "s#%DIST%#$DIST#" $DIR/etc/yum.repos.d/qubes-repo-*.repo
    sed -i -e "s#%QUBESVER%#$USE_QUBES_REPO_VERSION#" $DIR/etc/yum.repos.d/qubes-repo-*.repo

    if [ "${DIST_NAME}" == "fedora" ]; then
        QUBES_SIGNING_KEY="qubes-release-$USE_QUBES_REPO_VERSION-primary.asc"
    fi
    if [ "${DIST_NAME}" == "centos" ]; then
        QUBES_SIGNING_KEY="qubes-release-$USE_QUBES_REPO_VERSION-centos.asc"
    fi
    
    if [ -r "$QUBES_SIGNING_KEY" ]; then
        chroot $DIR rpm --import /dev/stdin < \
            "$QUBES_SIGNING_KEY" || true
    fi
    
    if [ "0$USE_QUBES_REPO_TESTING" -gt 0 ]; then
        if [ "$YUM" = "dnf" ]; then
            chroot $DIR dnf config-manager --set-enabled 'qubes-builder-*-current-testing'
        else
            chroot $DIR yum-config-manager --enable 'qubes-builder-*-current-testing'
        fi
    fi
fi

if ! [ -r $DIR/proc/cpuinfo ]; then
    mount -t proc proc $DIR/proc
fi

if ! [ -d $DIR/tmp/qubes-packages-mirror-repo/rpm ]; then
    mkdir -p $DIR/tmp/qubes-packages-mirror-repo
    mount --bind $BUILDER_REPO_DIR $DIR/tmp/qubes-packages-mirror-repo
fi
cp /etc/resolv.conf $DIR/etc/
# some packages assumes existence of this file
touch $DIR/etc/fstab
chmod 644 $DIR/etc/fstab

PKGGROUPS="$(cat $PKGLISTFILE)"
echo "-> Installing package groups..."
chroot $DIR $YUM install -y $YUM_OPTS $PKGGROUPS

if [ -n "$CHROOT_CACHE_FILE" ]; then
    tar cf "$CHROOT_CACHE_FILE" --one-file-system $DIR
fi
