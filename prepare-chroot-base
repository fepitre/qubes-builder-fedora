#!/bin/bash
# vim: set ts=4 sw=4 sts=4 et :

PLUGIN_DIR="`dirname $0`"

INSTALLDIR=$1
DIST=$2

set -e
if [ "${VERBOSE:-0}" -ge 2 -o "${DEBUG:-0}" -eq 1 ]; then
    set -x
else
    YUM_OPTS="$YUM_OPTS -q"
fi

DOWNLOADDIR="${CACHEDIR}/base_rpms"

YUM="yum --downloaddir=${DOWNLOADDIR} --downloadonly install"
if type yumdownloader >/dev/null 2>/dev/null; then
    # debian does not have --downloadonly plugin
    YUM="yumdownloader --resolve --destdir=${DOWNLOADDIR}"
elif type dnf >/dev/null 2>/dev/null; then
    YUM="dnf --releasever "${DIST#fc}" --downloaddir=${DOWNLOADDIR} --downloadonly install"
fi

if ! [ -f "${INSTALLDIR}/tmp/.prepared_base" ]; then
    echo "-> Initializing RPM database..."
    RPM_OPTS=()
    if [ -e /etc/debian_version ]; then
	    # Debian by default keep rpmdb in ~/.rpmdb
	    RPM_OPTS+=("--define=_dbpath %{_var}/lib/rpm")
    fi
    rpm "${RPM_OPTS[@]}" --initdb --root=${INSTALLDIR}
    rpm "${RPM_OPTS[@]}" --import --root=${INSTALLDIR} \
        ${PLUGIN_DIR}/keys/RPM-GPG-KEY-fedora-${DIST#fc}-primary

    echo "-> Retreiving core RPM packages..."
    INITIAL_PACKAGES="filesystem setup fedora-release"
    if [ "${DIST#fc}" -ge 22 ]; then
        INITIAL_PACKAGES="$INITIAL_PACKAGES dnf dnf-plugins-core"
    else
        INITIAL_PACKAGES="$INITIAL_PACKAGES yum yum-utils"
    fi
    if [ "${DIST#fc}" -ge 25 ]; then
        # libcrypt conflicts with libcrypt-nss and yumdownloader is stupid
        # enough to try them both
        INITIAL_PACKAGES="--exclude=libcrypt $INITIAL_PACKAGES"
    fi
    
    if [ "${DIST#fc}" -ge 26 ]; then
        # coreutils conflicts with coreutils-single
        INITIAL_PACKAGES="--exclude=coreutils-single $INITIAL_PACKAGES"
    fi

    if [ "${DIST#fc}" -ge 27 ]; then
        # curl-minimal conflicts with curl, same for libcurl
        INITIAL_PACKAGES="--exclude=curl --exclude=libcurl $INITIAL_PACKAGES"
    fi

    mkdir -p "${DOWNLOADDIR}"
    yumconf=$(mktemp)
    sed -e "s/\\\$releasever/${DIST#fc}/g" \
        < "${PLUGIN_DIR}"/yum-bootstrap.conf \
        > "$yumconf"
    $YUM -c "$yumconf" -y \
        --installroot="${INSTALLDIR}" \
        ${INITIAL_PACKAGES}
    rm -f "$yumconf"

    echo "-> Verifying signatures..."
    set +x
    for file in "${DOWNLOADDIR}"/*; do
        result=$(rpm "${RPM_OPTS[@]}" --root=${INSTALLDIR} --checksig "${file}") || {
            echo "Filename: ${file} failed verification.  Exiting!"
            exit 1
        }
        result_status="${result##*:}"
        echo "${result_status}" | grep -q 'PGP' && {
            echo "Filename: ${file} contains an invalid PGP signature. Exiting!"
            exit 1
        }
        echo "${result_status}" | grep -q 'pgp' || {
            echo "Filename: ${file} is not signed.  Exiting!"
            exit 1
        }
    done
    echo "-> Printing hashes of downloaded packages:"
    sha256sum "${DOWNLOADDIR}/"*.rpm
    if [ "${VERBOSE:-0}" -ge 2 -o "${DEBUG:-0}" -eq 1 ]; then
        set -x
    fi

    echo "-> Installing core RPM packages..."
    rpm "${RPM_OPTS[@]}" -U --replacepkgs --root="${INSTALLDIR}" "${DOWNLOADDIR}/"*.rpm || exit 1
    for f in null urandom zero random console; do
        cp -a /dev/$f $INSTALLDIR/dev/
    done

    touch "${INSTALLDIR}/tmp/.prepared_base"
fi
