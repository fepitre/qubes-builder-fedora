#!/bin/sh

set -e
if [ "${VERBOSE:-0}" -ge 2 -o "${DEBUG:-0}" -eq 1 ]; then
    set -x
fi

if [ $# -lt 2 ]; then
    echo "Usage: $0 input output" >&2
    exit 1
fi

cp "$1" "$1.tmp"

# Handle sources with multiples package/version/release:
# 'version' must contains list of version number corresponding to @VERSION@ @VERSION1@ ...
# 'rel', must contains list of release number corresponding to @REL@ @REL1@ ...
cat "${ORIG_SRC}/version" | while read ver
do
    if [ "x$vnum" == "x" ]; then
        sed -i "s|@VERSION@|$ver|g" "$1.tmp"
    else
        sed -i "s|@VERSION$vnum@|$ver|g" "$1.tmp"
    fi
    vnum=$(( vnum + 1 ))
done

if [ -e "${ORIG_SRC}/rel" ]; then
cat "${ORIG_SRC}/rel" | while read rel
do
    if [ "x$rnum" == "x" ]; then
        sed -i "s|@REL@|$rel|g" "$1.tmp"
    else
        sed -i "s|@REL$rnum@|$rel|g" "$1.tmp"
    fi
    rnum=$(( rnum + 1 ))
done
fi

# Handle default rel and backend_vmm
sed -i \
    -e "s:@REL@:`cat ${ORIG_SRC}/rel 2>/dev/null || echo 1`:g" \
    -e "s:@BACKEND_VMM@:${BACKEND_VMM}:g" "$1.tmp"

# Handle changelog
if [ -e "${ORIG_SRC}/changelog" ]; then
    sed -i '/@CHANGELOG@/ r changelog' "$1.tmp"
fi
sed -i 's|@CHANGELOG@|%changelog|g' "$1.tmp"

cat "$1.tmp" > $2
rm -rf "$1.tmp"

# TODO: improve handlers
